stages:
  - stage: Build
    jobs:
    - job: SQLite
      strategy:
        matrix:
          Linux:
            osName: 'linux'
            imageName: 'ubuntu-16.04'
          Mac:
            osName: 'macos'
            imageName: 'macos-10.13'
          Windows:
             osName: 'windows'
             imageName: 'vs2017-win2016'

      pool:
        vmImage: $(imageName)
      steps:
        - checkout: self
        - task: BatchScript@1
          inputs:
            filename: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars32.bat
            modifyEnvironment: true
          displayName: 'VsDevCmd.bat'
          condition: and(succeeded(), eq(variables['osName'], 'windows'))
        - task: Bash@3
          displayName: Build
          inputs:
            targetType: 'filePath'
            filePath: 'build_$(osName).sh'
        - publish: src
          artifact: '$(osName)_native'

    - job: SystemDataSQLite
      pool:
        vmImage: 'vs2017-win2016'
      steps:
        - bash: ./get_system_data_sqlite.sh
        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: 'net/SQLite.NET.NetStandard20.MSBuild.sln'
            arguments: '/p:Configuration=ReleaseManagedOnly /p:UseInteropDll=false /p:UseSqliteStandard=true'
        - publish: net/bin/NetStandard20/ReleaseNetStandard20/bin/netstandard2.0
          artifact: 'System.Data.SQLite'

  - stage: Package

    jobs:
    - job: Nuget
      pool:
        vmImage: 'vs2017-win2016'
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: windows_native
          targetPath: artifact/win-x86
          itemPattern: 'sqlite3.dll'
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: macos_native
          targetPath: artifact/osx-x64
          itemPattern: 'libsqlite3.0.dylib'
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: System.Data.SQLite
          targetPath: net/bin/NetStandard20/ReleaseNetStandard20/bin/netstandard2.0
      - task: NuGetToolInstaller@0
      - bash: |
          ls -lR
      - task: NuGetCommand@2
        inputs:
          command: 'pack'
          packagesToPack: 'SQLite.Core.nuspec'
          versioningScheme: 'off'
      - task: NuGetCommand@2
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: '43582661-9ac3-4ec6-9583-209885d5ff34/5d856138-315d-4cf9-9209-fcb7e8943d81'
      - publish: System.Data.SQLite.Core.Lidarr.1.0.111.nupkg
        artifact: System.Data.SQLite.Core.Lidarr
