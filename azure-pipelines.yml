jobs:
  - job: SQLite
    strategy:
      matrix:
        Linux:
          osName: 'linux'
          imageName: 'ubuntu-16.04'
        Mac:
          osName: 'macos'
          imageName: 'macos-10.13'
        # Windows:
        #   osName: 'Windows'
        #   imageName: 'vs2017-win2016'
    
    pool:
      vmImage: $(imageName)
    steps:
      - checkout: self
      - task: Bash@3
        displayName: Build
        inputs:
          targetType: 'filePath'
          filePath: 'build_$(osName).sh'
      - publish: src
        artifact: '$(osName)Native'

  - job: Windows
    displayName: SQLite Windows
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - checkout: self
      - bash: ./get_source.sh
      - script: |
          "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat"
          cd src
          cl sqlite3.c -link -dll -out:sqlite3.dll
      - bash: file src/sqlite3.dll

  - job: SystemDataSQLite
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - bash: |
          mkdir net
          cd net
          curl --output system.data.sqlite.zip "https://system.data.sqlite.org/blobs/1.0.84.0/sqlite-netFx-source-1.0.84.0.zip"
          unzip system.data.sqlite.zip
      - task: MSBuild@1
        inputs:
          solution: 'net/SQLite.NET.2012.MSBuild.sln'
          configuration: 'Release'
          msbuildArguments: '/p:DefineConstants=SQLITE_STANDARD /t:System_Data_SQLite_2012'
      - publish: bin
        artifact: 'System.Data.SQLite'
          
          
