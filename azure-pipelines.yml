jobs:
  - job: SQLite
    strategy:
      matrix:
        Linux:
          osName: 'linux'
          imageName: 'ubuntu-16.04'
        Mac:
          osName: 'macos'
          imageName: 'macos-10.13'
        Windows:
           osName: 'Windows'
           imageName: 'vs2017-win2016'
    
    pool:
      vmImage: $(imageName)
    steps:
      - checkout: self
      - task: BatchScript@1
        inputs:
          filename: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars32.bat
          modifyEnvironment: true
        displayName: 'VsDevCmd.bat'
        condition: and(succeeded(), eq(variables['osName'], 'Windows'))
      - task: Bash@3
        displayName: Build
        inputs:
          targetType: 'filePath'
          filePath: 'build_$(osName).sh'
      - publish: src
        artifact: '$(osName)Native'

  # - job: Windows
  #   displayName: SQLite Windows
  #   pool:
  #     vmImage: 'vs2017-win2016'
  #   steps:
  #     - checkout: self
  #     - bash: ./get_source.sh
  #     - script: |
  #         call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat"
  #         cd src
  #         cl sqlite3.c -link -dll -out:sqlite3.dll
  #     - bash: file src/sqlite3.dll

  # - job: Windows_2
  #   displayName: SQLite Windows 2
  #   pool:
  #     vmImage: 'vs2017-win2016'
  #   steps:
  #     - checkout: self
  #     - bash: ./get_source.sh
  #     - task: BatchScript@1
  #       inputs:
  #         filename: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\VsDevCmd.bat
  #         arguments: -no_logo
  #         modifyEnvironment: true
  #       displayName: 'VsDevCmd.bat'
  #       condition: and(succeeded(), eq(variables['osName'], 'Windows'))
  #     - script: |
  #         cd src
  #         dir
  #         cl sqlite3.c -link -dll -out:sqlite3.dll
  #     - bash: file src/sqlite3.dll

  - job: Windows_3
    displayName: SQLite Windows Default Autoconf
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - checkout: self
      - bash: ./get_source.sh
      - script: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
          cd src
          nmake /f makefile.msc
      - publish: src
        artifact: 'WindowsAutoConf'

  - job: SystemDataSQLite
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - bash: |
          mkdir net
          cd net
          curl --output system.data.sqlite.zip "https://system.data.sqlite.org/blobs/1.0.111.0/sqlite-netFx-source-1.0.111.0.zip"
          unzip system.data.sqlite.zip
      - script: |
          cd net
          cd setup
          dir
          call "build.bat ReleaseManagedOnly"
      # - task: BatchScript@1
      #   inputs:
      #     filename: net\\Setup\\build.bat
      #     arguments: ReleaseManagedOnly
      #     modifyEnvironment: true
      #   displayName: 'Build.bat'
      - publish: net
        artifact: 'System.Data.SQLite'
          
          
